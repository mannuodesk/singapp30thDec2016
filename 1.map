{"version":3,"file":"1.chunk.js","sources":["webpack:///./~/angular2-localstorage/LocalStorageEmitter.ts?34a0","webpack:///./~/angular2-localstorage/WebStorage.ts?c191","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.style.scss","webpack:///./src/app/login/login.template.html","webpack:///./src/app/services/UsersService.ts?7e16"],"sourcesContent":["import {Injectable, OnDestroy} from \"@angular/core\";\nimport {NgZone} from \"@angular/core\";\n\nexport class LocalStorageEmitter {\n\n    protected static subscribed: any = [];\n    protected static ngZones: NgZone[] = [];\n\n    public static register(ngZone: NgZone) {\n        let index: number = LocalStorageEmitter.ngZones.indexOf(ngZone);\n        if (index === -1) {\n            index = LocalStorageEmitter.ngZones.push(ngZone) - 1;\n        }\n        LocalStorageEmitter.subscribed[index] = ngZone.onMicrotaskEmpty.subscribe(() => {\n            for (let callback of LocalStorageEmitter.subscribers) {\n                callback();\n            }\n        });\n    }\n\n    protected static subscribers: any = [];\n\n    public static subscribe(callback: Function) {\n        LocalStorageEmitter.subscribers.push(callback);\n    }\n\n    public static unregister(ngZone: NgZone) {\n        let index: number = LocalStorageEmitter.ngZones.indexOf(ngZone);\n        if (index >= 0) {\n            LocalStorageEmitter.subscribed[index].unsubscribe();\n        }\n    }\n}\n\n@Injectable()\nexport class LocalStorageService implements OnDestroy {\n    constructor(private ngZone: NgZone) {\n        LocalStorageEmitter.register(this.ngZone);\n    }\n\n    ngOnDestroy() {\n        LocalStorageEmitter.unregister(this.ngZone);\n    }\n}\n\nimport {Type} from \"@angular/core/src/facade/lang\";\nimport {provide} from \"@angular/core/src/di\";\nimport {ComponentRef} from \"@angular/core\";\n\nexport function LocalStorageSubscriber(appPromise: Promise<ComponentRef<any>>) {\n    appPromise.then((bla) => {\n        bla.injector.get(<Type>LocalStorageService);\n    });\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-localstorage/LocalStorageEmitter.ts","import {LocalStorageEmitter} from \"./LocalStorageEmitter\";\n\ninterface IWebStorage {\n    getItem: (key: string) => string;\n    setItem: (key: string, value: string) => void;\n}\n\nexport function LocalStorage(storageKey?: string) {\n    return WebStorage(storageKey, localStorage);\n}\n\nexport function SessionStorage(storageKey?: string) {\n    return WebStorage(storageKey, sessionStorage);\n}\n\nfunction WebStorage(storageKey: string, webStorage: IWebStorage) {\n    return (target: Object, decoratedPropertyName?: string): void => {\n        if (!webStorage) {\n            return;\n        }\n\n        if (!storageKey) {\n            storageKey = \"\" + \"/\" + decoratedPropertyName;\n        }\n\n        Object.defineProperty(target, \"_\" + decoratedPropertyName + \"_mapped\", {\n            enumerable: false,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n\n        let instances: any = [];\n        let values = {};\n\n        let storageValue = webStorage.getItem(storageKey) || null;\n        let storageValueJSON = storageValue;\n        if (\"string\" === typeof storageValue) {\n            try {\n                storageValue = JSON.parse(storageValue);\n            } catch (e) {\n                storageValue = null;\n                storageValueJSON = \"null\";\n            }\n        }\n        let oldJSONValues = {};\n\n        Object.defineProperty(target, decoratedPropertyName, {\n            get: function () {\n                if (false === this[\"_\" + decoratedPropertyName + \"_mapped\"]) {\n                    this[\"_\" + decoratedPropertyName + \"_mapped\"] = instances.length;\n\n                    // first registration triggers a setting to localStorage value\n                    values[instances.length] = storageValue;\n                    oldJSONValues[instances.length] = storageValueJSON;\n\n                    instances.push(this);\n                }\n                return values[this[\"_\" + decoratedPropertyName + \"_mapped\"]];\n            },\n            set: function (newValue) {\n                if (false === this[\"_\" + decoratedPropertyName + \"_mapped\"]) {\n                    this[\"_\" + decoratedPropertyName + \"_mapped\"] = instances.length;\n\n                    // first registration triggers a setting to localStorage value\n                    values[instances.length] = storageValue;\n                    oldJSONValues[instances.length] = storageValueJSON;\n\n                    instances.push(this);\n                    // first \"set\" call is ignored if we have already a value from the localStorage\n                    if (storageValue) {\n                        return;\n                    }\n                }\n                values[this[\"_\" + decoratedPropertyName + \"_mapped\"]] = newValue;\n            },\n            enumerable: true,\n            configurable: true\n        });\n\n        LocalStorageEmitter.subscribe(() => {\n            for (let instance of instances) {\n                let currentValue = JSON.stringify(instance[decoratedPropertyName]);\n                let oldJSONValue = oldJSONValues[instance[\"_\" + decoratedPropertyName + \"_mapped\"]];\n                if (currentValue !== oldJSONValue) {\n                    oldJSONValues[instance[\"_\" + decoratedPropertyName + \"_mapped\"]] = currentValue;\n                    webStorage.setItem(storageKey, currentValue);\n                }\n            }\n        });\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/angular2-localstorage/WebStorage.ts","import { Component, ViewEncapsulation } from '@angular/core';\nimport {Input} from '@angular/core';\nimport {UsersService} from './../services/UsersService';\nimport { LocalStorageService } from 'angular2-localstorage/LocalStorageEmitter';\nimport { SessionStorage } from 'angular2-localstorage/WebStorage';\nimport { Router }  from '@angular/router';\ndeclare var jQuery: any;\n\n@Component({\n  selector: 'login',\n  styles: [ require('./login.style.scss') ],\n  template: require('./login.template.html'),\n  providers :[UsersService, LocalStorageService],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    class: 'login-page app'\n  }\n})\nexport class Login {\n  @Input() Email:string = \"\";\n  @Input() Password:string;\n  public userService : UsersService;\n  public router:any;\n  constructor(public _userService : UsersService, storageService: LocalStorageService, router:Router) {\n    console.log(this.userId);\n    this.router = router;\n  }\n  @SessionStorage() public userId:string;  \n  onKey(event)\n    {\n      if(event.keyCode == 13) {\n        \n        jQuery('#wrongLogin').hide();\n        jQuery('#enterEmail').hide();\n        jQuery('#enterPassword').hide();\n        if(this.Email == \"\")\n        {\n          jQuery('#enterEmail').show();\n        }\n        if(this.Password == \"\" || this.Password === undefined)\n        {\n          jQuery('#enterPassword').show();\n        }\n        if(this.Email != \"\" && this.Password != \"\")\n        {\n          this._userService.authenticateAdminUser(this.Email, this.Password).subscribe(\n          a=> {\n              console.log(a);\n              if(a.code == 200)\n              {\n                console.log(a.message);\n                this.userId = a.data;\n                //navigation\n                this.router.navigate(['/app/dashboard']);\n              }\n              else{\n                jQuery('#wrongLogin').show();\n                console.log(a.message);\n              }  \n            }\n          );\n        }\n    }\n  }\n\n      \n    \n  onSubmit()\n  {\n    jQuery('#wrongLogin').hide();\n    jQuery('#enterEmail').hide();\n    jQuery('#enterPassword').hide();\n    if(this.Email == \"\")\n    {\n      jQuery('#enterEmail').show();\n    }\n    if(this.Password == \"\" || this.Password === undefined)\n    {\n      jQuery('#enterPassword').show();\n    }\n    if(this.Email != \"\" && this.Password != \"\")\n    {\n      this._userService.authenticateAdminUser(this.Email, this.Password).subscribe(\n      a=> {\n          console.log(a);\n          if(a.code == 200)\n          {\n            console.log(a.message);\n            this.userId = a.data;\n            //navigation\n            this.router.navigate(['/app/dashboard']);\n          }\n          else{\n            jQuery('#wrongLogin').show();\n            console.log(a.message);\n          }  \n        }\n      );\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/login/login.component.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n//import {Ng2Webstorage} from 'ng2-webstorage';\r\n\r\nimport { Login } from './login.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: Login, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    Login\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes)\r\n    //Ng2Webstorage\r\n  ]\r\n})\r\nexport default class LoginModule {\r\n  static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/login/login.module.ts","module.exports = \"/***********************************/\\n/**             LOGIN             **/\\n/***********************************/\\n.login-page {\\n  background-color: #ddd; }\\n\\n.login-page .page-footer {\\n  margin-bottom: 25px;\\n  font-size: 13px;\\n  color: #818a91;\\n  text-align: center; }\\n  @media (min-height: 600px) {\\n    .login-page .page-footer {\\n      position: absolute;\\n      bottom: 0;\\n      left: 0;\\n      right: 0; } }\\n\\n.widget-login-container {\\n  padding-top: 10%; }\\n\\n.widget-login-logo {\\n  margin-top: 15px;\\n  margin-bottom: 15px;\\n  text-align: center;\\n  font-weight: 400; }\\n  .widget-login-logo .fa-circle {\\n    font-size: 13px;\\n    margin: 0 20px; }\\n\\n.widget-login {\\n  padding: 30px; }\\n  .widget-login > header h1, .widget-login > header h2, .widget-login > header h3, .widget-login > header h4, .widget-login > header h5, .widget-login > header h6 {\\n    font-weight: 400;\\n    text-align: center; }\\n\\n.widget-login-info {\\n  font-size: 13px;\\n  color: #888;\\n  margin-top: 1px;\\n  margin-bottom: 0;\\n  text-align: center; }\\n  .widget-login-info.abc-checkbox {\\n    margin-left: -25px; }\\n\\n.login-form .form-control {\\n  font-size: 13px;\\n  border: none;\\n  background-color: #eceeef; }\\n  .login-form .form-control:focus {\\n    background-color: #ddd; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.style.scss\n// module id = ./src/app/login/login.style.scss\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\r\\n  <main id=\\\"content\\\" class=\\\"widget-login-container\\\" role=\\\"main\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-xl-4 col-md-6 col-xs-10 offset-xl-4 offset-md-3 offset-xs-1\\\">\\r\\n        <h5 class=\\\"widget-login-logo animated fadeInUp\\\">\\r\\n          <i class=\\\"fa fa-circle text-gray\\\"></i>\\r\\n          april\\r\\n          <i class=\\\"fa fa-circle text-warning\\\"></i>\\r\\n        </h5>\\r\\n        <section class=\\\"widget widget-login animated fadeInUp\\\">\\r\\n          <header>\\r\\n            <h3>Login to your April App</h3>\\r\\n          </header>\\r\\n          <div class=\\\"widget-body\\\">\\r\\n            <p class=\\\"widget-login-info\\\">\\r\\n              Use Facebook, Twitter or your email to sign in.\\r\\n            </p>\\r\\n            <p class=\\\"widget-login-info\\\">\\r\\n              Don't have an account? Sign up now!\\r\\n            </p>\\r\\n            <form class=\\\"login-form mt-lg\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"Email\\\" name=\\\"Email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" placeholder=\\\"Username\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input [(ngModel)]=\\\"Password\\\" name=\\\"Password\\\" (keyup)=\\\"onKey($event)\\\" class=\\\"form-control\\\" id=\\\"pswd\\\" type=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n              </div>\\r\\n              <div id=\\\"wrongLogin\\\" style=\\\"display:none\\\" class=\\\"form-group\\\">\\r\\n                <div class=\\\"alert alert-danger alert-sm\\\">\\r\\n                  <span class=\\\"fw-semi-bold\\\">Danger:</span> Invalid User Name or Password.\\r\\n                </div>\\r\\n              </div>\\r\\n              <div id=\\\"enterEmail\\\" style=\\\"display:none\\\" class=\\\"form-group\\\">\\r\\n                <div class=\\\"alert alert-warning alert-sm\\\">\\r\\n                  <span class=\\\"fw-semi-bold\\\">Warning:</span> Please Enter Email.\\r\\n                </div>\\r\\n              </div>\\r\\n              <div id=\\\"enterPassword\\\" style=\\\"display:none\\\" class=\\\"form-group\\\">\\r\\n                <div class=\\\"alert alert-warning alert-sm\\\">\\r\\n                  <span class=\\\"fw-semi-bold\\\">Warning:</span> Please Enter Password.\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"clearfix\\\">\\r\\n                <div class=\\\"btn-toolbar pull-xs-right m-t-1\\\">\\r\\n                  <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm\\\">Create an Account</button>\\r\\n                  <a (click)=\\\"onSubmit()\\\" class=\\\"btn btn-inverse btn-sm\\\" style=\\\"color:white;\\\">Login</a>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row m-t-1\\\">\\r\\n                <div class=\\\"col-md-6 push-md-6\\\">\\r\\n                  <div class=\\\"clearfix\\\">\\r\\n                    <div class=\\\"abc-checkbox widget-login-info pull-xs-right\\\">\\r\\n                      <input type=\\\"checkbox\\\" id=\\\"checkbox1\\\" value=\\\"1\\\">\\r\\n                      <label for=\\\"checkbox1\\\">Keep me signed in </label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-6 pull-md-6\\\">\\r\\n                  <a class=\\\"mr-n-lg\\\" href=\\\"#\\\">Trouble with account?</a>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n        </section>\\r\\n      </div>\\r\\n    </div>\\r\\n  </main>\\r\\n  <footer class=\\\"page-footer\\\">\\r\\n    2016 &copy; Sing. Admin Dashboard Template.\\r\\n  </footer>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.template.html\n// module id = ./src/app/login/login.template.html\n// module chunks = 1","import {Injectable,Inject} from '@angular/core';\r\nimport {Http,Headers, RequestOptions} from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n@Injectable()\r\nexport class UsersService{\r\n    baseUrl:string = \"http://aprilappserver.azurewebsites.net/\";\r\n    //baseUrl:string = \"http://localhost:5000/\";\r\n    constructor(private http:Http)\r\n    {\r\n\r\n    }\r\n    getUsers()\r\n    {\r\n        return this.http.get(this.baseUrl + 'users/getAllUsers')\r\n            .map(res=>res.json());\r\n    }\r\n    getUsersStats()\r\n    {\r\n        return this.http.get(this.baseUrl + 'users/dashboardStats')\r\n            .map(res=>res.json());\r\n    }\r\n    authenticateAdminUser(email,password)\r\n    {\r\n        let body = JSON.stringify({ \"email\":email,\"password\":password });\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method:'post', headers: headers });\r\n\r\n        return this.http.post(this.baseUrl + \"users/adminUserLogin\", body, options)\r\n            .map(res=>res.json());\r\n    }\r\n    getAdminData(Id)\r\n    {\r\n        let body = JSON.stringify({ \"userId\":Id });\r\n        let headers = new Headers({ 'Content-Type': 'application/json' });\r\n        let options = new RequestOptions({ method:'post', headers: headers });\r\n\r\n        return this.http.post(this.baseUrl + \"users/getAdminUser\", body, options)\r\n            .map(res=>res.json());\r\n    }\r\n    deleteUsers(Id)\r\n    {\r\n        return this.http.get(this.baseUrl + 'users/deleteUser/'+Id)\r\n            .map(res=>res.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/UsersService.ts"],"mappings":";;;;;;;AAAA;AACA;AAEA;AAAA;AA6BA;AAxBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AA1BA;AACA;AAcA;AAYA;AAAA;AA7BA;AAgCA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AARA;AAAA;;AAAA;AASA;;AAAA;AARA;AAcA;AACA;AACA;AACA;AACA;AAJA;;;;;;;;;;ACjDA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AAaA;AAKA;AAAA;AAJA;AAKA;AACA;AACA;AAEA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAhFA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAOA;AAAA;;AAAA;AAnBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAmFA;;AAAA;AAlFA;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAaA;AAAA;AAEA;AADA;AAZA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAAA;AAGA;AAAA;AAFA;AAEA;;;;;;;;ACzBA;;;;;;;ACAA;;;;;;;;;ACAA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAFA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxCA;AAAA;;AAAA;AAyCA;;AAAA;AAxCA;;;;;","sourceRoot":""}